import BaseLayout from '../layouts/BaseLayout.astro';
import resume from '../data/resume.json';

const skillGroups = resume.skills ?? [];
const certifications = resume.certifications ?? [];
const learning = resume.learning ?? [];
const counts = skillGroups.flatMap((group) => group.items?.map((item) => item.count) ?? []);
const maxCount = counts.length ? Math.max(...counts) : 0;
const totalSessions = counts.reduce((sum, value) => sum + value, 0);
---
<BaseLayout title="Skills — yukassa" description="カテゴリ別のスキル実績と直近の学習状況。実践回数のチャートで強みを可視化します。">
  <article class="page">
    <header class="page__hero container">
      <p class="page__eyebrow">Skills</p>
      <h1>実践回数で見るスキルの輪郭</h1>
      <p class="page__lead">
        プロダクトのフェーズに応じて手を動かしてきたスキルをカテゴリ別に集計しました。
        バーの長さは直近 24 ヶ月で実務に投入した回数を示しています。
      </p>
      {totalSessions > 0 && (
        <p class="page__meta">総セッション数: {totalSessions}</p>
      )}
    </header>

    <section class="section container">
      <h2>Skill Utilization</h2>
      <p class="section__lead">各スキルのバーは実務で活用したセッション数を表します。</p>
      <div class="grid">
        {skillGroups.map((group) => {
          const groupTotal = group.items?.reduce((sum, item) => sum + item.count, 0) ?? 0;
          return (
            <article class="card">
              <header>
                <h3>{group.category}</h3>
                <span class="card__total">{groupTotal} sessions</span>
              </header>
              <ul class="chart" role="list">
                {group.items?.map((item) => {
                  const width = maxCount ? Math.round((item.count / maxCount) * 100) : 0;
                  return (
                    <li class="chart__item">
                      <div class="chart__label">
                        <span>{item.name}</span>
                        <span class="chart__count">{item.count}</span>
                      </div>
                      <div class="chart__bar" role="presentation" aria-hidden="true">
                        <span class="chart__fill" style={`width: ${width}%`}></span>
                      </div>
                      <span class="sr-only">{item.name} は {item.count} 回実践</span>
                    </li>
                  );
                })}
              </ul>
            </article>
          );
        })}
      </div>
    </section>

    {certifications.length > 0 && (
      <section class="section container">
        <h2>Certifications</h2>
        <ul class="cert-list">
          {certifications.map((cert) => (
            <li>{cert}</li>
          ))}
        </ul>
      </section>
    )}

    {learning.length > 0 && (
      <section class="section container">
        <h2>Currently Learning</h2>
        <p class="section__lead">実務の合間に深掘りしているテーマ。</p>
        <ul class="learning-list">
          {learning.map((topic) => (
            <li>{topic}</li>
          ))}
        </ul>
      </section>
    )}

    <section class="section container">
      <div class="cta-panel">
        <div>
          <h2>プロジェクト単位の実績も合わせて確認</h2>
          <p>
            個別の案件における役割や成果は
            <a href="/projects">Projects</a>
            ページで詳細に紹介しています。スキルの使われ方と合わせてご覧ください。
          </p>
        </div>
        <a class="cta" href="/projects">プロジェクトを見る</a>
      </div>
    </section>
  </article>
</BaseLayout>

<style>
  .page {
    display: flex;
    flex-direction: column;
    gap: clamp(2.5rem, 5vw, 3.5rem);
  }

  .page__hero {
    padding: clamp(3rem, 8vw, 4.5rem) 0 0;
    display: grid;
    gap: clamp(1.75rem, 4vw, 2.5rem);
  }

  .page__eyebrow {
    margin: 0;
    font-size: 0.85rem;
    font-weight: 600;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    color: var(--accent);
  }

  .page__lead {
    margin: 0;
    max-width: 760px;
    color: var(--muted);
  }

  .page__meta {
    margin: 0;
    color: var(--muted);
    font-size: 0.95rem;
  }

  .section {
    display: grid;
    gap: clamp(1.75rem, 4vw, 2.5rem);
  }

  .section__lead {
    margin: 0;
    color: var(--muted);
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: clamp(1.75rem, 4vw, 2.5rem);
  }

  .card {
    background: var(--surface);
    border-radius: var(--radius-md);
    padding: clamp(1.85rem, 4vw, 2.4rem);
    box-shadow: var(--shadow);
    display: grid;
    gap: clamp(1rem, 2vw, 1.45rem);
  }

  .card header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }

  .card h3 {
    margin: 0;
  }

  .card__total {
    color: var(--muted);
    font-size: 0.9rem;
    font-variant-numeric: tabular-nums;
  }

  .chart {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: 0.9rem;
  }

  .chart__item {
    display: grid;
    gap: 0.35rem;
  }

  .chart__label {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.95rem;
  }

  .chart__count {
    color: var(--accent);
    font-variant-numeric: tabular-nums;
    font-weight: 600;
  }

  .chart__bar {
    height: 8px;
    background: rgba(148, 163, 184, 0.2);
    border-radius: 999px;
    overflow: hidden;
  }

  .chart__fill {
    display: block;
    height: 100%;
    background: var(--accent);
    border-radius: inherit;
    transition: width 0.4s ease;
  }

  .cert-list {
    margin: 0;
    padding-left: 1.6rem;
    display: grid;
    gap: 0.65rem;
    color: var(--muted);
  }

  .learning-list {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .learning-list li {
    padding: 0.55rem 1.1rem;
    border-radius: 999px;
    background: rgba(56, 189, 248, 0.15);
    color: #f8fafc;
    font-weight: 600;
    font-size: 0.95rem;
  }

  .cta-panel {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: clamp(1.5rem, 4vw, 2.5rem);
    padding: clamp(1.85rem, 4vw, 2.4rem);
    border-radius: var(--radius-md);
    background: linear-gradient(135deg, rgba(56, 189, 248, 0.15), rgba(12, 74, 110, 0.25));
    border: 1px solid rgba(56, 189, 248, 0.2);
  }

  .cta-panel p {
    margin: 0;
    color: var(--muted);
  }

  .cta-panel a {
    color: var(--accent);
    font-weight: 600;
    text-decoration: none;
  }

  .cta-panel a:hover,
  .cta-panel a:focus {
    text-decoration: underline;
  }

  .cta {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.6rem;
    border-radius: 999px;
    background: var(--accent);
    color: #010409;
    text-decoration: none;
    font-weight: 600;
    box-shadow: var(--shadow);
  }

  @media (max-width: 880px) {
    .cta-panel {
      flex-direction: column;
      align-items: flex-start;
    }
  }

  @media (max-width: 640px) {
    .page__hero {
      padding: clamp(2.5rem, 8vw, 3rem) 0 0;
    }
  }
</style>
